{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dnguyen/Developer/meetup/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport React from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetailPage = function MeetupDetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      alt: props.meetupData.title,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["/Users/dnguyen/Developer/meetup/pages/[meetupId]/index.js"],"names":["React","Head","MeetupDetail","MeetupDetailPage","props","meetupData","title","description","image","address"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,GAAG,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBC,KAH1B;AAIE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAJ5B;AAKE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AALhC;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhBD;;KAAMJ,gB;;AA8DN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetailPage = (props) => {\n  return (\n    <React.Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name='description' content={props.meetupData.description} />\n      </Head>\n      <MeetupDetail\n        image={props.meetupData.image}\n        alt={props.meetupData.title}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() }\n    }))\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const { meetupId } = context.params;\n\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}