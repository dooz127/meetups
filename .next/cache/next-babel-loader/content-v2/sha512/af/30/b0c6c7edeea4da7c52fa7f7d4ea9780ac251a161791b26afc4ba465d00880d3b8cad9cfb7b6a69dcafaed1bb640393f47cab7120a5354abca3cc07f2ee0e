{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dnguyen/Developer/meetup/pages/[meetupId]/index.js\";\nimport React from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    alt: props.meetupData.title,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = context => {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/2/2d/Taipei_Taiwan_Taipei-101-Tower-01.jpg',\n        title: 'A First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'The meetup description'\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/dnguyen/Developer/meetup/pages/[meetupId]/index.js"],"names":["React","MongoClient","MeetupDetail","MeetupDetailPage","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,GAAG,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBE,KAH1B;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAJ5B;AAKE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AALhC;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,mCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEN,QADM;AAEVpB,QAAAA,KAAK,EACH,2FAHQ;AAIVC,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,OAAO,EAAE,0BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD,CAjBM;AAmBP,eAAeN,gBAAf","sourcesContent":["import React from 'react';\nimport { MongoClient } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetailPage = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      alt={props.meetupData.title}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() }\n    }))\n  };\n};\n\nexport const getStaticProps = (context) => {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image:\n          'https://upload.wikimedia.org/wikipedia/commons/2/2d/Taipei_Taiwan_Taipei-101-Tower-01.jpg',\n        title: 'A First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'The meetup description'\n      }\n    }\n  };\n};\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}